
(block 
  (<0>&test-0-ss "abcdef" "cd"</0>) 
  (<1>my (rz-decl x2) ::: str</1>) 
  (<2>x2 \=
    (<3>test-s-ss "abcdef" "cd"</3>)</2>) 
  (<4>&prs x2</4>) 
  (<5>my (rz-decl x3) ::: int</5>) 
  (<6>x3 \=
    (<7>test-i-ss "abcdef" "cd"</7>)</6>) 
  (<8>&prn x3</8>) 
  (<9>&test-0-s "abcdef"</9>) 
  (<10>my (rz-decl x5) ::: str</10>) 
  (<11>x5 \=
    (<12>test-s-s "abcdef"</12>)</11>) 
  (<13>&prs x5</13>) 
  (<14>my (rz-decl x6) ::: int</14>) 
  (<15>x6 \=
    (<16>test-i-s "abcdef"</16>)</15>) 
  (<17>&prn x6</17>) 
  (<18>my (rz-decl fnd) ::: Fn_Doc*</18>) 
  (<19>fnd \== default</19>) 
  (<20>my (rz-decl kenv) ::: KCM_Env*</20>) 
  (<21>kenv \=
    (<22>envv "KCM_Env*"</22>)</21>) 
  (<23>fnd -> init kenv</23>) 
  (<24>fnd -> test-0-S10-s "abcd"</24>) 
  (<25>my (rz-decl fnd) ::: Fn_Doc*</25>) 
  (<26>fnd \== default</26>) 
  (<27>my (rz-decl kenv) ::: KCM_Env*</27>) 
  (<28>kenv \=
    (<29>envv "KCM_Env*"</29>)</28>) 
  (<30>fnd -> init kenv</30>) 
  (<31>fnd -> test-0-S10</31>))